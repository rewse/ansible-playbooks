- id: automation.auto_lock_entrance_locks
  alias: "Auto-Lock Entrance Locks"
  triggers:
    - trigger: time_pattern
      minutes: "/5"
      seconds: 34
  conditions:
    - condition: state
      entity_id:
        - lock.entrance_lock_bottom
        - lock.entrance_lock_top
      match: any
      state: "unlocked"
      for:
        minutes: "{{ int(states('input_number.entrance_auto_lock_minutes')) }}"
    - condition: state
      entity_id: binary_sensor.entrance_door
      state: "off"
      for:
        minutes: "{{ int(states('input_number.entrance_auto_lock_minutes')) }}"
  actions:
    - action: lock.lock
      target:
        entity_id:
          - lock.entrance_lock_bottom
          - lock.entrance_lock_top
  trace:
    stored_traces: 100
- id: automation.push_entrance_1_button_switch
  alias: "Push Entrance 1-Button Switch"
  triggers:
    - trigger: state
      entity_id:
        - event.entrance_1_button_switch_button
        - event.living_room_1_button_switch_button
  actions:
    - choose:
        - conditions:
            - condition: state
              entity_id:
                - event.entrance_1_button_switch_button
                - event.living_room_1_button_switch_button
              match: any
              attribute: event_type
              state: "multi_press_1"
            - condition: state
              entity_id:
                  - lock.entrance_lock_bottom
                  - lock.entrance_lock_top
              match: any
              state: "locked"
          sequence:
            - action: lock.unlock
              target:
                entity_id:
                  - lock.entrance_lock_bottom
                  - lock.entrance_lock_top
        - conditions:
            - condition: state
              entity_id:
                - event.entrance_1_button_switch_button
                - event.living_room_1_button_switch_button
              match: any
              attribute: event_type
              state: "multi_press_2"
            - condition: state
              entity_id:
                  - lock.entrance_lock_bottom
                  - lock.entrance_lock_top
              match: any
              state: "unlocked"
          sequence:
            - action: lock.lock
              target:
                entity_id:
                  - lock.entrance_lock_bottom
                  - lock.entrance_lock_top
  mode: restart
  trace:
    stored_traces: 100
- id: automation.restart_entrance_sesame_hub
  alias: "Restart Entrance Sesame Hub"
  triggers:
    - trigger: state
      entity_id: binary_sensor.entrance_door
      to: "off"
      for:
        minutes: "{{ int(states('input_number.entrance_auto_lock_minutes')) + 10 }}"
  conditions:
    - condition: state
      entity_id: alarm_control_panel.entrance_auto_lock
      state:
        - "armed_home"
        - "armed_night"
      for:
        minutes: "{{ int(states('input_number.entrance_auto_lock_minutes')) + 10 }}"
    - condition: state
      entity_id:
        - lock.entrance_lock_bottom
        - lock.entrance_lock_top
      match: any
      state: "unlocked"
      for:
        minutes: "{{ int(states('input_number.entrance_auto_lock_minutes')) + 10 }}"
  actions:
    - action: switch.turn_off
      target:
        entity_id: switch.entrance_sesame_hub_plug
    - delay:
        seconds: 5
    - action: switch.turn_on
      target:
        entity_id: switch.entrance_sesame_hub_plug
    - action: notify.tats_devices
      data:
        message: "Resterted Entrance Sesame Hub"
        data:
          push:
            interruption-level: time-sensitive
          url: "/dashboard-securities/securities"
    - delay:
        seconds: 10
    - action: lock.lock
      target:
        entity_id:
          - lock.entrance_lock_bottom
          - lock.entrance_lock_top
    - delay:
        hours: 2
  trace:
    stored_traces: 100
- id: automation.select_entrance_alarm_control
  alias: "Select Entrance Alarm Control"
  triggers:
    - trigger: state
      entity_id: input_select.time_mode
    - trigger: homeassistant
      event: start
  actions:
    - if:
        - condition: state
          entity_id: input_select.time_mode
          state:
            - "Daytime"
            - "Twilight"
      then:
        - service: alarm_control_panel.alarm_arm_home
          target:
            entity_id: alarm_control_panel.entrance
      else:
        - service: alarm_control_panel.alarm_arm_night
          target:
            entity_id: alarm_control_panel.entrance
  trace:
    stored_traces: 100
- id: automatin.select_entrance_auto_lock_time
  alias: "Select Entrance Auto-Lock Time"
  triggers:
    - trigger: state
      entity_id:
        - alarm_control_panel.entrance
        - input_number.entrance_auto_lock_minutes_daytime
        - input_number.entrance_auto_lock_minutes_night
    - trigger: homeassistant
      event: start
  actions:
    - choose:
        - conditions:
            - condition: state
              entity_id: alarm_control_panel.entrance
              state: "armed_home"
          sequence:
            - action: input_number.set_value
              target:
                entity_id: input_number.entrance_auto_lock_minutes
              data:
                value: "{{ int(states('input_number.entrance_auto_lock_minutes_daytime')) }}"
    - choose:
        - conditions:
            - condition: state
              entity_id: alarm_control_panel.entrance
              state: "armed_night"
          sequence:
            - action: input_number.set_value
              target:
                entity_id: input_number.entrance_auto_lock_minutes
              data:
                value: "{{ int(states('input_number.entrance_auto_lock_minutes_night')) }}"
    - choose:
        - conditions:
            - condition: state
              entity_id: alarm_control_panel.entrance
              state: "disarmed"
          sequence:
            - action: input_number.set_value
              target:
                entity_id: input_number.entrance_auto_lock_minutes
              data:
                value: 1440
  trace:
    stored_traces: 100

