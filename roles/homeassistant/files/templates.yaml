- binary_sensor:

  # Dad’s Room

  - unique_id: binary_sensor.dads_room_ac_cooldry
    name: "Dad’s Room AC CoolDry"
    state: >-
      {{
        states('climate.dads_room_ac') == 'cool' or
        states('climate.dads_room_ac') == 'dry'
      }}
    device_class: cold
    icon: "mdi:snowflake"
  - unique_id: binary_sensor.dads_room_humidity_high
    name: "Dad's Room Humidity High"
    state: >-
      {{
        float(states('sensor.dads_room_humidity')) >
        float(states('input_number.dads_room_humidity_target')) +
        float(states('input_number.dads_room_humidity_max_diff'))
      }}
    icon: "mdi:water-percent-alert"
  - unique_id: binary_sensor.dads_room_humidity_low
    name: "Dad's Room Humidity Low"
    state: >-
      {{
        float(states('sensor.dads_room_humidity')) <
        float(states('input_number.dads_room_humidity_target')) -
        float(states('input_number.dads_room_humidity_min_diff'))
      }}
    icon: "mdi:water-percent-alert"
  - unique_id: binary_sensor.dads_room_temp_high
    name: "Dad's Room Temperature High"
    state: >-
      {{
        float(states('sensor.dads_room_temperature')) >
        float(states('input_number.dads_room_temp_target')) +
        float(states('input_number.dads_room_temp_max_diff'))
      }}
    icon: "mdi:thermometer-high"
  - unique_id: binary_sensor.dads_room_temp_low
    name: "Dad's Room Temperature Low"
    state: >-
      {{
        float(states('sensor.dads_room_temperature')) <
        float(states('input_number.dads_room_temp_target')) -
        float(states('input_number.dads_room_temp_min_diff'))
      }}
    icon: "mdi:thermometer-low"
  - unique_id: binary_sensor.dads_room_thermometer_connectivity
    name: "Dad's Room Thermometer Connectivity"
    state: >-
      {{ (now() - states.sensor.dads_room_temperature.last_updated).total_seconds() < 3600 }}
    device_class: connectivity

  # Living Room

  - unique_id: binary_sensor.living_room_ac_cooldry
    name: "Living Room AC CoolDry"
    state: >-
      {{
        states('climate.living_room_ac') == 'cool' or
        states('climate.living_room_ac') == 'dry'
      }}
    device_class: cold
    icon: "mdi:snowflake"
  - unique_id: binary_sensor.living_room_floor_thermometer_connectivity
    name: "Living Room Floor Thermometer Connectivity"
    state: >-
      {{ (now() - states.sensor.living_room_floor_temperature.last_updated).total_seconds() < 3600 }}
    device_class: connectivity
  - unique_id: binary_sensor.living_room_humidity_high
    name: "Living Room Humidity High"
    state: >-
      {{
        float(states('sensor.living_room_humidity')) >
        float(states('input_number.living_room_humidity_target')) +
        float(states('input_number.living_room_humidity_max_diff'))
      }}
    icon: "mdi:water-percent-alert"
  - unique_id: binary_sensor.living_room_humidity_low
    name: "Living Room Humidity Low"
    state: >-
      {{
        float(states('sensor.living_room_humidity')) <
        float(states('input_number.living_room_humidity_target')) -
        float(states('input_number.living_room_humidity_min_diff'))
      }}
    icon: "mdi:water-percent-alert"
  - unique_id: binary_sensor.living_room_temp_high
    name: "Living Room Temperature High"
    state: >-
      {{
        float(states('sensor.living_room_temperature')) >
        float(states('input_number.living_room_temp_target')) +
        float(states('input_number.living_room_temp_max_diff'))
      }}
    icon: "mdi:thermometer-high"
  - unique_id: binary_sensor.living_room_temp_low
    name: "Living Room Temperature Low"
    state: >-
      {{
        float(states('sensor.living_room_temperature')) <
        float(states('input_number.living_room_temp_target')) -
        float(states('input_number.living_room_temp_min_diff'))
      }}
    icon: "mdi:thermometer-low"
  - unique_id: binary_sensor.living_room_thermometer_connectivity
    name: "Living Room Thermometer Connectivity"
    state: >-
      {{ (now() - states.sensor.living_room_temperature.last_updated).total_seconds() < 3600 }}
    device_class: connectivity

  # Mom’s Room

  - unique_id: binary_sensor.moms_room_ac_cooldry
    name: "Mom’s Room AC CoolDry"
    state: >-
      {{
        states('climate.moms_room_ac') == 'cool' or
        states('climate.moms_room_ac') == 'dry'
      }}
    device_class: cold
    icon: "mdi:snowflake"
  - unique_id: binary_sensor.moms_room_humidity_high
    name: "Mom's Room Humidity High"
    state: >-
      {{
        float(states('sensor.moms_room_humidity')) >
        float(states('input_number.moms_room_humidity_target')) +
        float(states('input_number.moms_room_humidity_max_diff'))
      }}
    icon: "mdi:water-percent-alert"
  - unique_id: binary_sensor.moms_room_humidity_low
    name: "Mom's Room Humidity Low"
    state: >-
      {{
        float(states('sensor.moms_room_humidity')) <
        float(states('input_number.moms_room_humidity_target')) -
        float(states('input_number.moms_room_humidity_min_diff'))
      }}
    icon: "mdi:water-percent-alert"
  - unique_id: binary_sensor.moms_room_temp_high
    name: "Mom's Room Temperature High"
    state: >-
      {{
        float(states('sensor.moms_room_temperature')) >
        float(states('input_number.moms_room_temp_target')) +
        float(states('input_number.moms_room_temp_max_diff'))
      }}
    icon: "mdi:thermometer-high"
  - unique_id: binary_sensor.moms_room_temp_low
    name: "Mom's Room Temperature Low"
    state: >-
      {{
        float(states('sensor.moms_room_temperature')) <
        float(states('input_number.moms_room_temp_target')) -
        float(states('input_number.moms_room_temp_min_diff'))
      }}
    icon: "mdi:thermometer-low"
  - unique_id: binary_sensor.moms_room_thermometer_connectivity
    name: "Mom's Room Thermometer Connectivity"
    state: >-
      {{ (now() - states.sensor.moms_room_temperature.last_updated).total_seconds() < 3600 }}

- sensor:

  # Balcony

  - unique_id: sensor.balcony_humidity_difference
    name: "Balcony Humidity Difference"
    state: >-
      {{
        (
          float(states('sensor.balcony_humidity')) -
          float(states('sensor.balcony_switchbot_meter_humidity'))
        ) | abs
      }}
    unit_of_measurement: "pt"
    state_class: measurement
    icon: "mdi:water-percent-alert"
  - unique_id: sensor.balcony_temp_difference
    name: "Balcony Temperature Difference"
    state: >-
      {{
        (
          float(states('sensor.balcony_temperature')) -
          float(states('sensor.balcony_switchbot_meter_temperature'))
        ) | abs
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-alert"
  - unique_id: sensor.balcony_wbgt
    name: "Balcony WBGT"
    state: >-
      {{
        (
          (states('sensor.balcony_temperature') | float(25) - 30.5) * 0.90739 +
          (states('sensor.balcony_humidity') | float(50) - 60.0) * 0.14775 +
          (states('sensor.balcony_temperature') | float(25) - 30.5) *
          (states('sensor.balcony_humidity') | float(50) - 60.0) * 0.003655 + 27.77
        ) | round(2)
       }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-water"

# Dad’s Room

  - unique_id: sensor.dads_room_ac_mode
    name: "Dad’s Room AC Mode"
    state: "{{ states('climate.dads_room_ac') }}"
    icon: "mdi:thermostat"
  - unique_id: sensor.dads_room_ac_temp
    name: "Dad’s Room AC Temperature"
    state: "{{ state_attr('climate.dads_room_ac', 'temperature') }}"
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-check"
  - unique_id: sensor.dads_room_humidity_difference
    name: "Dad’s Room Humidity Difference"
    state: >-
      {{
        (
          float(states('sensor.dads_room_humidity')) -
          float(states('sensor.dads_room_switchbot_meter_humidity'))
        ) | abs
      }}
    unit_of_measurement: "pt"
    state_class: measurement
    icon: "mdi:water-percent-alert"
  - unique_id: sensor.dads_room_temp_difference
    name: "Dad’s Room Temperature Difference"
    state: >-
      {{
        (
          float(states('sensor.dads_room_temperature')) -
          float(states('sensor.dads_room_switchbot_meter_temperature'))
        ) | abs
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-alert"
  - unique_id: sensor.dads_room_wbgt
    name: "Dad’s Room WBGT"
    state: >-
      {{
        (
          (states('sensor.dads_room_temperature') | float(25) - 30.5) * 0.90739 +
          (states('sensor.dads_room_humidity') | float(50) - 60.0) * 0.14775 +
          (states('sensor.dads_room_temperature') | float(25) - 30.5) *
          (states('sensor.dads_room_humidity') | float(50) - 60.0) * 0.003655 + 27.77
        ) | round(2)
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-water"

# Living Room

  - unique_id: sensor.living_room_ac_mode
    name: "Living Room AC Mode"
    state: "{{ states('climate.living_room_ac') }}"
    icon: "mdi:thermostat"
  - unique_id: sensor.living_room_ac_temp
    name: "Living Room AC Temperature"
    state: "{{ state_attr('climate.living_room_ac', 'temperature') }}"
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-check"
  - unique_id: sensor.living_room_floor_heating_effect
    name: Living Room Floor Heating Effect
    state: >-
      {{
        float(states('sensor.living_room_floor_temperature')) -
        float(states('sensor.living_room_temperature'))
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer"
  - unique_id: sensor.living_room_humidity_difference
    name: "Living Room Humidity Difference"
    state: >-
      {{
        (
          float(states('sensor.living_room_humidity')) -
          float(states('sensor.living_room_switchbot_hub_2_humidity'))
        ) | abs
      }}
    unit_of_measurement: "pt"
    state_class: measurement
    icon: "mdi:water-percent-alert"
  - unique_id: sensor.living_room_temp_difference
    name: "Living Room Temperature Difference"
    state: >-
      {{
        (
          float(states('sensor.living_room_temperature')) -
          float(states('sensor.living_room_switchbot_hub_2_temperature'))
        ) | abs
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-alert"
  - unique_id: sensor.living_room_wbgt
    name: "Living Room WBGT"
    state: >-
      {{
        (
          (states('sensor.living_room_temperature') | float(25) - 30.5) * 0.90739 +
          (states('sensor.living_room_humidity') | float(50) - 60.0) * 0.14775 +
          (states('sensor.living_room_temperature') | float(25) - 30.5) *
          (states('sensor.living_room_humidity') | float(50) - 60.0) * 0.003655 + 27.77
        ) | round(2)
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-water"

# Mom’s Room

  - unique_id: sensor.moms_room_ac_mode
    name: "Mom’s Room AC Mode"
    state: "{{ states('climate.moms_room_ac') }}"
    icon: "mdi:thermostat"
  - unique_id: sensor.moms_room_ac_temp
    name: "Mom’s Room AC Temperature"
    state: "{{ state_attr('climate.moms_room_ac', 'temperature') }}"
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-check"
  - unique_id: sensor.moms_room_humidity_difference
    name: "Mom’s Room Humidity Difference"
    state: >-
      {{
        float(states('sensor.moms_room_humidity')) -
        float(states('sensor.moms_room_switchbot_meter_humidity'))
        | abs
      }}
    unit_of_measurement: "pt"
    state_class: measurement
    icon: "mdi:water-percent-alert"
  - unique_id: sensor.moms_room_temp_difference
    name: "Mom’s Room Temperature Difference"
    state: >-
      {{
        (
          float(states('sensor.moms_room_temperature')) -
          float(states('sensor.moms_room_switchbot_meter_temperature'))
        ) | abs
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-alert"
  - unique_id: sensor.moms_room_wbgt
    name: "Mom’s Room WBGT"
    state: >-
      {{
        (
          (states('sensor.moms_room_temperature') | float(25) - 30.5) * 0.90739 +
          (states('sensor.moms_room_humidity') | float(50) - 60.0) * 0.14775 +
          (states('sensor.moms_room_temperature') | float(25) - 30.5) *
          (states('sensor.moms_room_humidity') | float(50) - 60.0) * 0.003655 + 27.77
        ) | round(2)
      }}
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature
    icon: "mdi:thermometer-water"

# Others

  - unique_id: sensor.tokyo_weather_rain_chance_max
    name: "Tokyo Weather Rain Chance Max"
    state: >-
      {{
        max([
          states('sensor.tokyo_weather_rain_chance_00_06') | int(0),
          states('sensor.tokyo_weather_rain_chance_06_12') | int(0),
          states('sensor.tokyo_weather_rain_chance_12_18') | int(0),
          states('sensor.tokyo_weather_rain_chance_18_24') | int(0)
        ])
      }}
    unit_of_measurement: "%"
    state_class: measurement
    icon: "mdi:weather-rainy"
  - unique_id: sensor.tokyo_weather_rain_chance_max_1
    name: "Tokyo Weather Rain Chance Max Day 1"
    state: >-
      {{
        max([
          states('sensor.tokyo_weather_rain_chance_00_06_1') | int(0),
          states('sensor.tokyo_weather_rain_chance_06_12_1') | int(0),
          states('sensor.tokyo_weather_rain_chance_12_18_1') | int(0),
          states('sensor.tokyo_weather_rain_chance_18_24_1') | int(0)
        ])
      }}
    unit_of_measurement: "%"
    state_class: measurement
    icon: "mdi:weather-rainy"
  - unique_id: sensor.tomihisacho_rainsnow
    name: "Tomihisacho RainSnow"
    state: >-
      {{
        float(states('sensor.tomihisacho_rain')) + float(states('sensor.tomihisacho_snow'))
      }}
    unit_of_measurement: "mm/h"
    state_class: measurement
    device_class: precipitation_intensity
    icon: "mdi:weather-pouring"
  - unique_id: sensor.tomihisacho_wind_direction
    name: "Tomihisacho Wind Direction"
    state: >-
      {%
        if int(states('sensor.tomihisacho_wind_bearing')) >= 337.5 or
        int(states('sensor.tomihisacho_wind_bearing')) < 22.5
      %}
        N
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 22.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 67.5
      %}
        NE
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 67.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 112.5
      %}
        E
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 112.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 157.5
      %}
        SE
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 157.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 202.5
      %}
        S
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 202.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 247.5
      %}
        SW
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 247.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 292.5
      %}
        W
      {%
        elif int(states('sensor.tomihisacho_wind_bearing')) >= 292.5 and
        int(states('sensor.tomihisacho_wind_bearing')) < 337.5
      %}
        NW
      {% endif %}
    icon: "mdi:weather-windy"
  - unique_id: sensor.tomihisacho_weather_rich
    name: "Tomihisacho Weather Rich"
    state: "{{ states('sensor.tomihisacho_weather') }}"
    icon: >-
      {% if int(states('sensor.tomihisacho_weather_code')) >= 803 %}
        mdi:weather-cloudy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 801 %}
        mdi:weather-partly-cloudy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 800 %}
        mdi:weather-sunny
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 700 %}
        mdi:weather-fog
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 620 %}
        mdi:weather-snowy-heavy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 611 %}
        mdi:weather-partly-snowy-rainy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 600 %}
        mdi:weather-snowy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 520 %}
        mdi:weather-rainy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 511 %}
        mdi:weather-snowy-rainy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 500 %}
        mdi:weather-partly-rainy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 300 %}
        mdi:weather-pouring
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 230 %}
        mdi:weather-lightning-rainy
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 210 %}
        mdi:weather-lightning
      {% elif int(states('sensor.tomihisacho_weather_code')) >= 200 %}
        mdi:weather-lightning-rainy
      {% else %}
        mdi:weather-partly-cloudy
      {% endif %}

# IMAP

- triggers:
    - trigger: event
      event_type: imap_content
      id: "custom_event"
      event_data:
        sender: "info@mamorail.jp"
  sensor:
    - unique_id: sensor.mamorail
      name: "Mamorail"
      state: "{{ trigger.event.data['subject'] }}"
      attributes:
        Message: "{{ trigger.event.data['text'] }}"
        Server: "{{ trigger.event.data['server'] }}"
        Username: "{{ trigger.event.data['username'] }}"
        Search: "{{ trigger.event.data['search'] }}"
        Folder: "{{ trigger.event.data['folder'] }}"
        Sender: "{{ trigger.event.data['sender'] }}"
        Date: "{{ trigger.event.data['date'] }}"
        Subject: "{{ trigger.event.data['subject'] }}"
        To: "{{ trigger.event.data['headers']['Delivered-To'][0] }}"
        Return_Path: "{{ trigger.event.data['headers']['Return-Path'][0] }}"
        Received-first: "{{ trigger.event.data['headers']['Received'][0] }}"
        Received-last: "{{ trigger.event.data['headers']['Received'][-1] }}"
      icon: "mdi:train"
    - unique_id: sensor.mamorail_action
      name: "Mamorail Action"
      state: >-
        {% if is_state('sensor.mamorail', "unavailable") %}
          unavailable
        {% else %}
          {{ state_attr('sensor.mamorail', 'Message') | regex_findall_index('(..*)しました') }}
        {% endif %}
      icon: "mdi:gate-open"
    - unique_id: sensor.mamorail_balance
      name: "Mamorail Balance"
      state: >-
        {% if is_state('sensor.mamorail', 'unavailable') %}
          unavailable
        {% else %}
          {{
            state_attr('sensor.mamorail', 'Message') |
            regex_findall_index('チャージ残額は(..*)円です') |
            regex_replace(',', '') | int
          }}
        {% endif %}
      icon: "mdi:credit-card-sync"
      unit_of_measurement: "JPY"
    - unique_id: sensor.mamorail_station
      name: "Mamorail Station"
      state: >-
        {% if is_state('sensor.mamorail', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.mamorail', 'Message') | regex_findall_index(':[0-9][0-9]に(..*)') }}
        {% endif %}
      icon: "mdi:train"
    - unique_id: sensor.mamorail_time
      name: "Mamorail Time"
      state: >-
        {% if is_state('sensor.mamorail', 'unavailable') %}
          unavailable
        {% else %}
          {{
            state_attr('sensor.mamorail', 'Message') |
            regex_findall_index('([0-9][0-9]*:[0-9][0-9])に')
          }}
        {% endif %}
      icon: "mdi:clock"
- trigger:
    - platform: event
      event_type: "imap_content"
      id: "custom_event"
      event_data:
        sender: "miwada_studyroom@outlook.com"
  sensor:
    - unique_id: sensor.mll
      name: "MLL"
      state: "{{ trigger.event.data['subject'] }}"
      attributes:
        Message: "{{ trigger.event.data['text'] }}"
        Server: "{{ trigger.event.data['server'] }}"
        Username: "{{ trigger.event.data['username'] }}"
        Search: "{{ trigger.event.data['search'] }}"
        Folder: "{{ trigger.event.data['folder'] }}"
        Sender: "{{ trigger.event.data['sender'] }}"
        Date: "{{ trigger.event.data['date'] }}"
        Subject: "{{ trigger.event.data['subject'] }}"
        To: "{{ trigger.event.data['headers']['Delivered-To'][0] }}"
        Return_Path: "{{ trigger.event.data['headers']['Return-Path'][0] }}"
        Received-first: "{{ trigger.event.data['headers']['Received'][0] }}"
        Received-last: "{{ trigger.event.data['headers']['Received'][-1] }}"
      icon: "mdi:school"
    - unique_id: sensor.mll_action
      name: "MLL Action"
      state: >-
        {% if is_state('sensor.mll', 'unavailable') %}
          unavailable
        {% else %}
          {{ states("sensor.mll") | regex_findall_index("入退室連絡_(..)") }}
        {% endif %}
      icon: "mdi:boom_gate"
    - unique_id: sensor.mll_time
      name: "MLL Time"
      state: >-
        {% if is_state('sensor.mll', 'unavailable') %}
          unavailable
        {% else %}
          {{
            states("sensor.mll") | regex_findall_index("([0-9][0-9]*時[0-9][0-9]*)分") |
            regex_replace("時", ":")
          }}
        {% endif %}
      icon: "mdi:clock"
