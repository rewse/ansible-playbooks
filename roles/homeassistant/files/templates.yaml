- binary_sensor:
  - name: Bedroom Presence
    unique_id: binary_sensor.bedroom_presence
    state: "{{ states('sensor.count_of_bedroom_motion_n') | int(0) > 10 or states('sensor.count_of_bedroom_motion_s') | int(0) > 10 }}"
    icon: >
      {% if is_state('binary_sensor.bedroom_presence', 'on') %}
        mdi:comment-account
      {% else %}
        mdi:comment-account-outline
      {% endif %}
  - name: Living Room Presence
    unique_id: binary_sensor.living_room_presence
    state: "{{ states('sensor.count_of_living_room_motion') | int(0) > 10 or states('sensor.count_of_study_motion') | int(0) > 10 }}"
    icon: >
      {% if is_state('binary_sensor.living_room_presence', 'on') %}
        mdi:comment-account
      {% else %}
        mdi:comment-account-outline
      {% endif %}
- sensor:
  - name: Balcony Humidity Difference
    unique_id: sensor.balcony_humidity_difference
    state: "{{ (states('sensor.balcony_humidity') | float(50) - state_attr('sensor.balcony_switchbot_meter_temperature', 'humidity') | float(50)) | round(2) | abs }}"
    icon: mdi:water-percent-alert
    device_class: humidity
    unit_of_measurement: pt
  - name: Balcony Temperature Difference
    unique_id: sensor.balcony_temperature_difference
    state: "{{ (states('sensor.balcony_temperature') | float(25) - states('sensor.balcony_switchbot_meter_temperature') | float(25)) | round(2) | abs }}"
    icon: mdi:thermometer-alert
    device_class: temperature
    unit_of_measurement: °C
  - name: Balcony WBGT
    unique_id: sensor.balcony_wbgt
    state: "{{ ((states('sensor.balcony_temperature') | float(25) - 30.5) * 0.90739 + (states('sensor.balcony_humidity') | float(50) - 60.0) * 0.14775 + (states('sensor.balcony_temperature') | float(25) - 30.5) * (states('sensor.balcony_humidity') | float(50) - 60.0) * 0.003655 + 27.77) | round(2) }}"
    icon: mdi:thermometer-lines
    device_class: temperature
    unit_of_measurement: °C
  - name: Bedroom Humidity Difference
    unique_id: sensor.bedroom_humidity_difference
    state: "{{ (states('sensor.bedroom_humidity') | float(50) - state_attr('sensor.bedroom_switchbot_meter_temperature', 'humidity') | float(50)) | round(2) | abs }}"
    icon: mdi:water-percent-alert
    device_class: humidity
    unit_of_measurement: pt
  - name: Bedroom HVAC Plug Power
    unique_id: sensor.bedroom_hvac_plug_power
    state: "{{ state_attr('switch.bedroom_hvac_plug', 'current_consumption') }}"
    device_class: power
    unit_of_measurement: W
  - name: Bedroom Surveillance Plug Power
    unique_id: sensor.bedroom_surveillance_plug_power
    state: "{{ state_attr('switch.bedroom_surveillance_plug', 'current_consumption') }}"
    device_class: power
    unit_of_measurement: W
  - name: Bedroom Temperature Difference
    unique_id: sensor.bedroom_temperature_difference
    state: "{{ (states('sensor.bedroom_temperature') | float(25) - states('sensor.bedroom_switchbot_meter_temperature') | float(25)) | round(2) | abs }}"
    icon: mdi:thermometer-alert
    device_class: temperature
    unit_of_measurement: °C
  - name: Bedroom WBGT
    unique_id: sensor.bedroom_wbgt
    state: "{{ ((states('sensor.bedroom_temperature') | float(25) - 30.5) * 0.90739 + (states('sensor.bedroom_humidity') | float(50) - 60.0) * 0.14775 + (states('sensor.bedroom_temperature') | float(25) - 30.5) * (states('sensor.bedroom_humidity') | float(50) - 60.0) * 0.003655 + 27.77) | round(2) }}"
    icon: mdi:thermometer-lines
    device_class: temperature
    unit_of_measurement: °C
  - name: Kitchen Rice Cooker Plug Power
    unique_id: switch.kitchen_rice_cooker_plug_power
    state: "{{ state_attr('switch.kitchen_rice_cooker_plug', 'current_consumption') }}"
    device_class: power
    unit_of_measurement: W
  - name: Living Room fox Plug Power
    unique_id: switch.living_room_fox_plug_power
    state: "{{ state_attr('switch.living_room_fox_plug', 'current_consumption') }}"
    device_class: power
    unit_of_measurement: W
  - name: Living Room Humidity Difference
    unique_id: sensor.living_room_humidity_difference
    state: "{{ (states('sensor.living_room_humidity') | float(50) - state_attr('sensor.living_room_switchbot_meter_temperature', 'humidity') | float(50)) | round(2) | abs }}"
    icon: mdi:water-percent-alert
    device_class: humidity
    unit_of_measurement: pt
  - name: Living Room Humidifier Plug Power
    unique_id: switch.living_room_humidifier_plug_power
    state: "{{ state_attr('switch.living_room_humidifier_plug', 'current_consumption') }}"
    device_class: power
    unit_of_measurement: W
  - name: Living Room Surveillance Plug Power
    unique_id: switch.living_room_surveillance_plug_power
    state: "{{ state_attr('switch.living_room_surveillance_plug', 'current_consumption') }}"
    device_class: power
    unit_of_measurement: W
  - name: Living Room Temperature Difference
    unique_id: sensor.living_room_temperature_difference
    state: "{{ (states('sensor.living_room_temperature') | float(25) - states('sensor.living_room_switchbot_meter_temperature') | float(25)) | round(2) | abs }}"
    icon: mdi:thermometer-alert
    device_class: temperature
    unit_of_measurement: °C
  - name: Living Room Temperature Effect of Floor Heating
    unique_id: sensor.living_room_temperature_effect_of_floor_heating
    state: "{{ states('sensor.living_room_floor_temperature') | float(25) - states('sensor.living_room_temperature') | float(25) }}"
    icon: mdi:thermometer
    device_class: temperature
    unit_of_measurement: °C
  - name: Living Room WBGT
    unique_id: sensor.living_room_wbgt
    state: "{{ ((states('sensor.living_room_temperature') | float(25) - 30.5) * 0.90739 + (states('sensor.living_room_humidity') | float(50) - 60.0) * 0.14775 + (states('sensor.living_room_temperature') | float(25) - 30.5) * (states('sensor.living_room_humidity') | float(50) - 60.0) * 0.003655 + 27.77) | round(2) }}"
    icon: mdi:thermometer-lines
    device_class: temperature
    unit_of_measurement: °C
- trigger:
    - platform: event
      event_type: imap_content
      id: custom_event
      event_data:
        sender: "anshin@denshobato.jp"
  sensor:
    - name: Anshin-Smile
      unique_id: sensor.anshin_smile
      state: "{{ trigger.event.data['subject'] }}"
      attributes:
        Message: "{{ trigger.event.data['text'] }}"
        Server: "{{ trigger.event.data['server'] }}"
        Username: "{{ trigger.event.data['username'] }}"
        Search: "{{ trigger.event.data['search'] }}"
        Folder: "{{ trigger.event.data['folder'] }}"
        Sender: "{{ trigger.event.data['sender'] }}"
        Date: "{{ trigger.event.data['date'] }}"
        Subject: "{{ trigger.event.data['subject'] }}"
        To: "{{ trigger.event.data['headers']['Delivered-To'][0] }}"
        Return_Path: "{{ trigger.event.data['headers']['Return-Path'][0] }}"
        Received-first: "{{ trigger.event.data['headers']['Received'][0] }}"
        Received-last: "{{ trigger.event.data['headers']['Received'][-1] }}"
      icon: mdi:emoticon-happy
    - name: Anshin-Smile Action
      unique_id: sensor.anshin_smile_action
      state: >
        {% if is_state('sensor.anshin_smile', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.anshin_smile', 'Message') | regex_findall_index('\$B(..9;)\$7\$\^\$7\$\?') | regex_replace('EP9;', '登校') | regex_replace('2<9;', '下校') }}
        {% endif %}
      icon: mdi:school
    - name: Anshin-Smile Time
      unique_id: sensor.anshin_smile_time
      state: >
        {% if is_state('sensor.anshin_smile', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.anshin_smile', 'Message') | regex_findall_index('.$BF|.\(B ([0-9][0-9].\$B;~.\(B[0-9][0-9])') | regex_replace('.\$B;~.\(B', ':') }}
        {% endif %}
      icon: mdi:clock-outline
- trigger:
    - platform: event
      event_type: imap_content
      id: custom_event
      event_data:
        sender: "info@mamorail.jp"
  sensor:
    - name: Mamorail
      unique_id: sensor.mamorail
      state: "{{ trigger.event.data['subject'] }}"
      attributes:
        Message: "{{ trigger.event.data['text'] }}"
        Server: "{{ trigger.event.data['server'] }}"
        Username: "{{ trigger.event.data['username'] }}"
        Search: "{{ trigger.event.data['search'] }}"
        Folder: "{{ trigger.event.data['folder'] }}"
        Sender: "{{ trigger.event.data['sender'] }}"
        Date: "{{ trigger.event.data['date'] }}"
        Subject: "{{ trigger.event.data['subject'] }}"
        To: "{{ trigger.event.data['headers']['Delivered-To'][0] }}"
        Return_Path: "{{ trigger.event.data['headers']['Return-Path'][0] }}"
        Received-first: "{{ trigger.event.data['headers']['Received'][0] }}"
        Received-last: "{{ trigger.event.data['headers']['Received'][-1] }}"
      icon: mdi:train
    - name: Mamorail Action
      unique_id: sensor.mamorail_action
      state: >
        {% if is_state('sensor.mamorail', "unavailable") %}
          unavailable
        {% else %}
          {{ state_attr('sensor.mamorail', 'Message') | base64_decode | regex_findall_index('(..*)しました') }}
        {% endif %}
      icon: mdi:gate-open
    - name: Mamorail Balance
      unique_id: sensor.mamorail_balance
      state: >
        {% if is_state('sensor.mamorail', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.mamorail', 'Message') | base64_decode | regex_findall_index('チャージ残額は(..*)円です') | regex_replace(',', '') | int }}
        {% endif %}
      icon: mdi:credit-card-sync-outline
      unit_of_measurement: JPY
    - name: Mamorail Station
      unique_id: sensor.mamorail_station
      state: >
        {% if is_state('sensor.mamorail', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.mamorail', 'Message') | base64_decode | regex_findall_index(':[0-9][0-9]に(..*)') }}
        {% endif %}
      icon: mdi:train
    - name: Mamorail Time
      unique_id: sensor.mamorail_time
      state: >
        {% if is_state('sensor.mamorail', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.mamorail', 'Message') | base64_decode | regex_findall_index('([0-9][0-9]*:[0-9][0-9])に') }}
        {% endif %}
      icon: mdi:clock-outline
- trigger:
    - platform: event
      event_type: imap_content
      id: custom_event
      event_data:
        sender: "ichigaya@yotsuya-otsuka.co.jp"
  sensor:
    - name: Yotsuya-Otsuka
      unique_id: sensor.yotsuya_otsuka
      state: "{{ trigger.event.data['subject'] }}"
      attributes:
        Message: "{{ trigger.event.data['text'] }}"
        Server: "{{ trigger.event.data['server'] }}"
        Username: "{{ trigger.event.data['username'] }}"
        Search: "{{ trigger.event.data['search'] }}"
        Folder: "{{ trigger.event.data['folder'] }}"
        Sender: "{{ trigger.event.data['sender'] }}"
        Date: "{{ trigger.event.data['date'] }}"
        Subject: "{{ trigger.event.data['subject'] }}"
        To: "{{ trigger.event.data['headers']['Delivered-To'][0] }}"
        Return_Path: "{{ trigger.event.data['headers']['Return-Path'][0] }}"
        Received-first: "{{ trigger.event.data['headers']['Received'][0] }}"
        Received-last: "{{ trigger.event.data['headers']['Received'][-1] }}"
    - name: Yotsuya-Otsuka Action
      unique_id: sensor.yotsuya_otsuka_action
      state: >
        {% if is_state('sensor.yotsuya_otsuka', 'unavailable') %}
          unavailable
        {% else %}
          {{ is_state('sensor.yotsuya_otsuka') | regex_findall_index("四谷大塚 (..*)のお知らせ") }}
        {% endif %}
      icon: mdi:lead-pencil
    - name: Yotsuya-Otsuka Time
      unique_id: sensor.yotsuya_otsuka_time
      state: >
        {% if is_state('sensor.yotsuya_otsuka', 'unavailable') %}
          unavailable
        {% else %}
          {{ state_attr('sensor.yotsuya_otsuka', 'Date') - timedelta(minutes = 8) | timestamp_custom('%H:%M') }}
        {% endif %}
      icon: mdi:clock-outline
