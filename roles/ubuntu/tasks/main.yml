---
- name: Set timezone
  timezone:
    name: Asia/Tokyo
  tags: [ubuntu, time]

- name: Add an apt key
  apt_key:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    keyring: /usr/share/keyrings/githubcli-archive-keyring.gpg
  tags: [ubuntu, package]

- name: Add a repository for GitHub
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    filename: github-cli
  when:
    ansible_architecture == "x86_64"
  tags: [ubuntu, package]

- name: Add a repository for GitHub
  apt_repository:
    repo: "deb [arch=arm64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    filename: github-cli
  when:
    ansible_architecture == "aarch64"
  tags: [ubuntu, package]

- name: Update all packages
  apt:
    name: '*'
    state: latest
    update_cache: yes
  tags: [ubuntu, package]

- name: Install additional packages
  apt:
    name:
      - apt-file
      - at
      - bc
      - dphys-swapfile
      - dnsutils
      - etckeeper
      - gh
      - git
      - irqbalance
      - libsasl2-modules
      - libwww-perl
      - locales-all
      - logwatch
      - iw
      - mailutils
      - ncdu
      - net-tools
      - postfix
      - python3-pip
      - python3-venv
      - sysstat
      - tldr
      - unattended-upgrades
      - unzip
      - vim
      - wireless-tools
  tags: [ubuntu, package]

- name: Stat awscliv2
  stat: path=/usr/local/bin/aws
  register: aws
  tags: [ubuntu, package, awscliv2]

- name: Unarchive awscliv2
  unarchive:
    src: https://awscli.amazonaws.com/awscli-exe-linux-{{ ansible_architecture }}.zip
    dest: /usr/local/src
    remote_src: yes
  when: not aws.stat.exists
  tags: [ubuntu, package, awscliv2]

- name: Install awscliv2
  command: /usr/local/src/aws/install
  when: not aws.stat.exists
  tags: [ubuntu, package, awscliv2]

- name: Update awscliv2
  command: /usr/local/src/aws/install --update
  when: aws.stat.exists
  tags: [ubuntu, package, awscliv2]

- name: "etckeeper : Init /etc"
  command: etckeeper init
  args:
      creates: /etc/.git
  tags: [ubuntu, etckeeper]

- name: "etckeeper : Initial commit"
  command: etckeeper commit "Initial commit"
  args:
    chdir: /etc
    creates: /etc/.git/logs
  tags: [ubuntu, etckeeper]

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags: [ubuntu, hostname]

- name: "cloud-init : Enable preserve_hostname"
  lineinfile:
    dest: /etc/cloud/cloud.cfg
    regexp: '^preserve_hostname'
    line: 'preserve_hostname: true'
  tags: [ubuntu, cloud-init]

- name: "input : Set editing-mode to vi"
  lineinfile:
    dest: /etc/inputrc
    regexp: 'set editing-mode '
    line: 'set editing-mode vi'
  tags: [ubuntu, input]

- name: Add a group for admin user
  group:
    name: "{{ admin }}"
    gid: 2000
  tags: [ubuntu, user]

- name: Add admin user
  user:
    name: "{{ admin }}"
    uid: 2000
    group: "{{ admin }}"
    groups: "adm,sudo"
    shell: /bin/bash
    skeleton: /etc/skel
  tags: [ubuntu, user]

- name: Allow sudo to admin user
  lineinfile:
    dest: /etc/sudoers.d/00-{{ admin }}
    regexp: '^{{ admin }}'
    line: '{{ admin }} ALL=(ALL) NOPASSWD: ALL'
    create: yes
    mode: 0440
    validate: 'visudo -cf %s'
  tags: [ubuntu, user]

- name: Make .ssh dir for admin user
  file:
    path: /home/{{ admin }}/.ssh
    owner: "{{ admin }}"
    group: "{{ admin }}"
    state: directory
    mode: 0700
  tags: [ubuntu, user]

- name: Copy id_rsa
  become_user: "{{ admin }}"
  copy:
    src: ~/.ssh/id_rsa
    dest: /home/{{ admin }}/.ssh/id_rsa
    mode: 0600
    follow: yes
  tags: [ubuntu, user]

- name: Copy id_rsa.pub
  become_user: "{{ admin }}"
  copy:
    src: ~/.ssh/id_rsa.pub
    dest: /home/{{ admin }}/.ssh/id_rsa.pub
    follow: yes
  tags: [ubuntu, user]

- name: "ssh : Copy authentication.conf"
  copy:
    src: authentication.conf
    dest: /etc/ssh/sshd_config.d
  notify: Restart ssh
  tags: [ubuntu, ssh]

- name: Copy authorized_keys
  copy:
    src: /home/ubuntu/.ssh/authorized_keys
    dest: /home/{{ admin }}/.ssh/authorized_keys
    remote_src: yes
    owner: "{{ admin }}"
    group: "{{ admin }}"
    mode: 0600
  tags: [ubuntu, user]
