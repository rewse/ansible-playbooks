---
- name: Include business environment variables
  include_vars:
    file: business.yml
  when: "'mcp-server-business' in ansible_run_tags"
  tags: [mcp-server-business]

- name: Include personal environment variables
  include_vars:
    file: personal.yml
  when: "'mcp-server-personal' in ansible_run_tags"
  tags: [mcp-server-personal]

- name: Initialize merged MCP server configurations with common servers
  set_fact:
    mcp_servers: "{{ mcp_servers_common }}"
  tags: [mcp-server, mcp-server-business, mcp-server-personal, config]

- name: Merge business MCP server configurations if applicable
  set_fact:
    mcp_servers: "{{ mcp_servers | combine(mcp_servers_business | default({})) }}"
  when: "'mcp-server-business' in ansible_run_tags"
  tags: [mcp-server-business, config]

- name: Merge personal MCP server configurations if applicable
  set_fact:
    mcp_servers: "{{ mcp_servers | combine(mcp_servers_personal | default({})) }}"
  when: "'mcp-server-personal' in ansible_run_tags"
  tags: [mcp-server-personal, config]

- name: Install uv package manager
  shell: curl -LsSf https://astral.sh/uv/install.sh | sh
  tags: [mcp-server, mcp-server-personal, mcp-server-business, install, uv]

- name: Copy local-bin.sh
  copy:
    src: local-bin.sh
    dest: /etc/profile.d
  when: ansible_distribution == "Ubuntu"
  tags: [mcp-server, mcp-server-personal, mcp-server-business, install, local-bin]

- name: Ensure MCP config directory exists
  file:
    path: "{{ mcp_config_dir }}"
    state: directory
  tags: [mcp-server, mcp-server-personal, mcp-server-business, config]

- name: Deploy MCP server configuration
  template:
    src: mcp.json.j2
    dest: "{{ mcp_config_file }}"
    mode: '0600'
  register: config_deployment
  tags: [mcp-server, mcp-server-personal, mcp-server-business, config]

- name: Validate MCP configuration JSON syntax
  command: python3 -c "import json; json.load(open('{{ mcp_config_file }}'))"
  register: validation_result
  failed_when: false
  changed_when: false
  when: config_deployment.changed
  tags: [mcp-server, mcp-server-personal, mcp-server-business, config, validate]

- name: Check validation result
  fail:
    msg: "Invalid JSON syntax in MCP configuration file: {{ validation_result.stderr }}"
  when: config_deployment.changed and validation_result.rc != 0
  tags: [mcp-server, mcp-server-personal, mcp-server-business, config, validate]

- name: Format JSON configuration with jq
  shell: |
    jq '.' "{{ mcp_config_file }}" > "{{ mcp_config_file }}.tmp" && \
    mv "{{ mcp_config_file }}.tmp" "{{ mcp_config_file }}"
  when: config_deployment.changed and validation_result.rc == 0
  tags: [mcp-server, mcp-server-personal, mcp-server-business, config, format]
