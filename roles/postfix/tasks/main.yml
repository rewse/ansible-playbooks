---
- name: install packages
  yum:
    name: "{{item}}"
    state: installed
  with_items:
    - amavisd-new
    - certbot-apache
    - clamav
    - clamav-server-systemd
    - clamav-update
    - cyrus-sasl
    - dovecot
    - lz4
    - procmail
    - spamassassin
  tags: [postfix, amavisd, cert, dovecot, procmail, spamassassin, package]

- name: install packages by pip
  pip:
    name: "{{item}}"
  with_items:
    - certbot-external-auth
    - boto
  tags: [postfix, cert, package]

- name: start saslauthd
  service:
    name: saslauthd
    enabled: yes
    state: started
  tags: [postfix, saslauthd]

- name: set inet_interfaces
  lineinfile:
    dest: /etc/postfix/main.cf
    insertafter: '^#inet_interfaces'
    regexp: '^inet_interfaces'
    line: 'inet_interfaces = all'
  notify: restart postfix
  tags: [postfix]

- name: set mydestination
  lineinfile:
    dest: /etc/postfix/main.cf
    insertbefore: '^#mydestination'
    regexp: '^mydestination'
    line: 'mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain'
  notify: reload postfix
  tags: [postfix]

- name: set mynetworks
  lineinfile:
    dest: /etc/postfix/main.cf
    insertafter: '^#mynetworks '
    regexp: '^mynetworks '
    line: 'mynetworks = 192.168.0.0/16 {{global_ip.home}}'
  notify: reload postfix
  tags: [postfix]

- name: set mail_spool_directory
  lineinfile:
    dest: /etc/postfix/main.cf
    insertafter: '^#mail_spool_directory '
    regexp: '^mail_spool_directory '
    line: 'mail_spool_directory = /srv/mail/'
  notify: reload postfix
  tags: [postfix]

- name: doownload route53.py
  get_url:
    url: "{{route53py_url}}"
    dest: /usr/local/bin
    mode: 0755
  tags: [postfix, cert]

# See also <https://qiita.com/AkihiroTakamura/items/06ced4e780dc217bc1aa>
- name: copy updatecertbot.cron
  template:
    src: updatecertbot.cron.j2
    dest: /etc/cron.monthly/updatecertbot.cron
    mode: 0755
  tags: [postfix, cert]

- name: Get a certification
  command: /etc/cron.monthly/updatecertbot.cron
  tags: [postfix, cert]

- name: amavisd; bypass spam checks
  lineinfile:
    dest: /etc/amavisd/amavisd.conf
    insertafter: '^# @bypass_spam_checks_maps '
    regexp: '^@bypass_spam_checks_maps '
    line: '@bypass_spam_checks_maps = (1);'
  notify: reload amavisd
  tags: [postfix, amavisd]

- name: amavisd; set mydomain
  lineinfile:
    dest: /etc/amavisd/amavisd.conf
    regexp: '^\$mydomain '
    line: "$mydomain = 'rewse.jp';"
  notify: reload amavisd
  tags: [postfix, amavisd]

- name: amavisd; set virus_admin
  lineinfile:
    dest: /etc/amavisd/amavisd.conf
    regexp: '^\$virus_admin '
    line: "$virus_admin = '{{vault_email.secondary}}';"
  notify: reload amavisd
  tags: [postfix, amavisd]

- name: amavisd; set mailfrom_notify_admin
  lineinfile:
    dest: /etc/amavisd/amavisd.conf
    regexp: '^\$mailfrom_notify_admin '
    line: "$mailfrom_notify_admin = 'amavisd@rewse.jp';"
  notify: reload amavisd
  tags: [postfix, amavisd]

- name: amavisd; enable always-clean
  lineinfile:
    dest: /etc/amavisd/amavisd.conf
    regexp: 'always-clean'
    line: "['always-clean', sub {0}],"
  notify: reload amavisd
  tags: [postfix, amavisd]

- name: enable freshclam.conf
  lineinfile:
    dest: /etc/freshclam.conf
    regexp: 'Example'
    line: '#Example'
  tags: [postfix, amavisd]

- name: enable clamav-update
  lineinfile:
    dest: /etc/sysconfig/freshclam
    regexp: 'FRESHCLAM_DELAY='
    line: '#FRESHCLAM_DELAY=disabled-warn'
  tags: [postfix, amavisd]

- name: copy rsyslog.d/clamd.conf
  copy:
    src: clamd.conf
    dest: /etc/rsyslog.d
  tags: [postfix, amavisd]

- name: refresh clamav db
  command: freshclam
  tags: [postfix, amavisd]

- name: start amavisd
  service:
    name: amavisd
    enabled: yes
    state: started
  tags: [postfix, amavisd]

- name: set posfix/main.cf
  blockinfile:
    dest: /etc/postfix/main.cf
    content: |
      smtpd_sasl_auth_enable = yes
      smtpd_sasl_security_options = noanonymous
      smtpd_recipient_restrictions =
        permit_sasl_authenticated,
        permit_mynetworks,
        reject_unauth_destination

      smtpd_use_tls = yes
      smtpd_tls_auth_only = yes
      smtpd_tls_cert_file = /etc/letsencrypt/live/mail.rewse.jp/fullchain.pem
      smtpd_tls_key_file = /etc/letsencrypt/live/mail.rewse.jp/privkey.pem
      smtpd_tls_loglevel = 1
      smtpd_tls_session_cache_database = hash:/etc/postfix/smtpd_scache
      smtpd_tls_received_header = yes
      tls_random_source = dev:/dev/urandom

      content_filter=amavisfeed:[127.0.0.1]:10024
  notify: reload postfix
  tags: [postfix, amavisd, cert]

- name: set postfix/master.cf
  blockinfile:
    dest: /etc/postfix/master.cf
    insertbefore: '^#smtp '
    content: |
      submission inet n       -       n       -       -       smtpd
        -o syslog_name=postfix/submission
      smtps     inet  n       -       n       -       -       smtpd
        -o syslog_name=postfix/smtps

      amavisfeed unix -       -       n       -       2       smtp
        -o smtp_data_done_timeout=1200
        -o smtp_send_xforward_command=yes
        -o disable_dns_lookups=yes
        -o max_use=20

      127.0.0.1:10025 inet n  -       n       -       -       smtpd
        -o content_filter=
        -o smtpd_delay_reject=no
        -o smtpd_client_restrictions=permit_mynetworks,reject
        -o smtpd_helo_restrictions=
        -o smtpd_sender_restrictions=
        -o smtpd_recipient_restrictions=permit_mynetworks,reject
        -o smtpd_data_restrictions=reject_unauth_pipelining
        -o smtpd_end_of_data_restrictions=
        -o smtpd_restriction_classes=
        -o mynetworks=127.0.0.0/8
        -o smtpd_error_sleep_time=0
        -o smtpd_soft_error_limit=1001
        -o smtpd_hard_error_limit=1000
        -o smtpd_client_connection_count_limit=0
        -o smtpd_client_connection_rate_limit=0
        -o receive_override_options=no_header_body_checks,no_unknown_recipient_checks,no_milters
        -o local_header_rewrite_clients=
  notify: reload postfix
  tags: [postfix, amavisd]

- name: get spamassassin local.cf
  get_url:
    url: http://www.flcl.org/~yoh/user_prefs
    dest: /etc/mail/spamassassin/local.cf
  notify: restart spamassassin
  tags: [postfix, spamassassin]

- name: copy updatesaconf.cron
  copy:
    src: updatesaconf.cron
    dest: /etc/cron.monthly
    mode: 0755
  tags: [postfix, spamassassin]

- name: copy private_prefs
  template:
    src: private_prefs.j2
    dest: /etc/mail/spamassassin/private_prefs
  notify: restart spamassassin
  tags: [postfix, spamassassin]

- name: start spamassassin
  service:
    name: spamassassin
    enabled: yes
    state: started
  tags: [postfix, spamassassin]

- name: clone sa-learn-all.git
  git:
    repo: git@github.com:rewse/sa-learn-all.git
    dest: /srv/git/sa-learn-all
    accept_hostkey: yes
    key_file: /home/{{admin}}/.ssh/id_rsa
  tags: [postfix, spamassassin]

- name: copy sa-learn-all
  copy:
    src: /srv/git/sa-learn-all{{item}}
    dest: "{{item}}"
    remote_src: yes
  with_items:
    - /usr/local/bin/sa-learn-all
    - /etc/cron.daily/sa-learn-all.cron
    - /etc/logrotate.d/sa-learn-all
  tags: [postfix, spamassassin]

- name: Change perm of sa-learn-all
  file:
    path: "{{item}}"
    mode: 0755
  with_items:
    - /usr/local/bin/sa-learn-all
    - /etc/cron.daily/sa-learn-all.cron
  tags: [postfix, spamassassin]

- name: create sa-learn-all.log
  file:
    path: /var/log/sa-learn-all.log
    state: touch
    mode: 0600
  tags: [postfix, spamassassin]

- name: use procmail
  lineinfile:
    dest: /etc/postfix/main.cf
    insertafter: '^#mailbox_command '
    regexp: '^mailbox_command '
    line: 'mailbox_command = /bin/procmail'
  notify: reload postfix
  tags: [postfix, procmail]

- name: copy procmailrc
  copy:
    src: procmailrc
    dest: /etc
  tags: [postfix, procmail]

- name: write aliases
  blockinfile:
    dest: /etc/aliases
    insertbefore: '^# Basic '
    content: "{{aliases}}"
  register: write_aliases_out
  tags: [postfix, aliases]

- name: enable aliases
  command: newaliases
  when: write_aliases_out|changed
  tags: [postfix, aliases]

- name: dovecot; set mail_location
  lineinfile:
    dest: /etc/dovecot/conf.d/10-mail.conf
    insertafter: '^#mail_location '
    regexp: '^mail_location '
    line: 'mail_location = maildir:/srv/mail/%u'
  notify: reload dovecot
  tags: [postfix, dovecot]

- name: dovecot; enable plaintext auth
  lineinfile:
    dest: /etc/dovecot/conf.d/10-auth.conf
    insertafter: '^#disable_plaintext_auth '
    regexp: '^disable_plaintext_auth '
    line: 'disable_plaintext_auth = no'
  notify: reload dovecot
  tags: [postfix, dovecot]

- name: dovecot; change ssl to yes
  lineinfile:
    dest: /etc/dovecot/conf.d/10-ssl.conf
    regexp: '^ssl '
    line: 'ssl = yes'
  notify: reload dovecot
  tags: [postfix, dovecot]

- name: dovecot; change mail_max_userip_connections
  lineinfile:
    dest: /etc/dovecot/conf.d/20-imap.conf
    insertafter: '^  #mail_max_userip_connections '
    regexp: '^  mail_max_userip_connections '
    line: '  mail_max_userip_connections = 20'
  notify: reload dovecot
  tags: [postfix, dovecot]

- name: dovecot; set ssl_cert
  lineinfile:
    dest: /etc/dovecot/conf.d/10-ssl.conf
    regexp: '^ssl_cert '
    line: 'ssl_cert = </etc/letsencrypt/live/mail.rewse.jp/fullchain.pem'
  notify: reload dovecot
  tags: [postfix, dovecot, cert]

- name: dovecot; set ssl_key
  lineinfile:
    dest: /etc/dovecot/conf.d/10-ssl.conf
    regexp: '^ssl_key '
    line: 'ssl_key = </etc/letsencrypt/live/mail.rewse.jp/privkey.pem'
  notify: reload dovecot
  tags: [postfix, dovecot, cert]

- name: create groups
  group:
    name: "{{item.key}}"
    gid: "{{item.value.gid}}"
  with_dict: "{{users}}"
  tags: [postfix]

- name: create users
  user:
    name: "{{item.key}}"
    uid: "{{item.value.uid}}"
    group: "{{item.key}}"
    comment: "{{item.value.comment}}"
    shell: "{{item.value.shell}}"
  with_dict: "{{users}}"
  tags: [postfix]

- name: make /srv/mail dir
  file:
    path: /srv/mail
    state: directory
    mode: 0755
  tags: [postfix]

- name: make mail user dir
  file:
    path: /srv/mail/{{item.key}}
    state: directory
    owner: "{{item.key}}"
    group: "{{item.key}}"
    mode: 0700
  with_dict: "{{users}}"
  tags: [postfix]

- name: make mail user link
  file:
    src: /srv/mail/{{item.key}}
    dest: /home/{{item.key}}/Maildir
    state: link
    owner: "{{item.key}}"
    group: "{{item.key}}"
  with_dict: "{{users}}"
  tags: [postfix]

- name: enable dovecot
  service:
    name: dovecot
    enabled: yes
    state: started
  tags: [postfix, dovecot]